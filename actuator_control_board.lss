
actuator_control_board.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000a2a  00000abe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000015f  00800100  00800100  00000abe  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000abe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ad0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e60  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001baf  00000000  00000000  00003ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001017  00000000  00000000  0000567f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003c0  00000000  00000000  00006698  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d1  00000000  00000000  00006a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fdb  00000000  00000000  00007429  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00008404  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  24:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  38:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  44:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  48:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__vector_18>
  4c:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_19>
  50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  68:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  6c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  70:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  74:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  78:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  7c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  80:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  84:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  88:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  8c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  90:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>

00000094 <__trampolines_end>:
  94:	7e 6e       	ori	r23, 0xEE	; 238
  96:	7f 62       	ori	r23, 0x2F	; 47
  98:	0c 37       	cpi	r16, 0x7C	; 124
  9a:	26 0c       	add	r2, r6
  9c:	37 12       	cpse	r3, r23
  9e:	0c 37       	cpi	r16, 0x7C	; 124
  a0:	0e 0c       	add	r0, r14
  a2:	37 06       	cpc	r3, r23
  a4:	0c 37       	cpi	r16, 0x7C	; 124
  a6:	02 0c       	add	r0, r2
  a8:	37 00       	.word	0x0037	; ????
  aa:	0c 36       	cpi	r16, 0x6C	; 108

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	d0 e1       	ldi	r29, 0x10	; 16
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_clear_bss>:
  b8:	22 e0       	ldi	r18, 0x02	; 2
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
  c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
  c2:	af 35       	cpi	r26, 0x5F	; 95
  c4:	b2 07       	cpc	r27, r18
  c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
  c8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <main>
  cc:	0c 94 13 05 	jmp	0xa26	; 0xa26 <_exit>

000000d0 <__bad_interrupt>:
  d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <can_wrapper_init>:
#include "can_wrapper.h"

uint8_t can_wrapper_init(void) {
  d4:	1f 93       	push	r17
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	cd b7       	in	r28, 0x3d	; 61
  dc:	de b7       	in	r29, 0x3e	; 62
  de:	29 97       	sbiw	r28, 0x09	; 9
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	f8 94       	cli
  e4:	de bf       	out	0x3e, r29	; 62
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	cd bf       	out	0x3d, r28	; 61
    uint8_t status;

    // Initialize MCP2515
    status = can_init(BITRATE_125_KBPS);
  ea:	84 e0       	ldi	r24, 0x04	; 4
  ec:	0e 94 13 01 	call	0x226	; 0x226 <can_init>
  f0:	18 2f       	mov	r17, r24

    // Set filter to receive all messages
    can_filter_t filter = {
  f2:	be 01       	movw	r22, r28
  f4:	6f 5f       	subi	r22, 0xFF	; 255
  f6:	7f 4f       	sbci	r23, 0xFF	; 255
  f8:	89 e0       	ldi	r24, 0x09	; 9
  fa:	fb 01       	movw	r30, r22
  fc:	11 92       	st	Z+, r1
  fe:	8a 95       	dec	r24
 100:	e9 f7       	brne	.-6      	; 0xfc <can_wrapper_init+0x28>
        .flags = {
            .rtr = 0,
            .extended = 0
        }
    };
    can_set_filter(0, &filter);
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	0e 94 2f 02 	call	0x45e	; 0x45e <can_set_filter>

    // Enable interrupts
    sei();
 108:	78 94       	sei

    return status;
}
 10a:	81 2f       	mov	r24, r17
 10c:	29 96       	adiw	r28, 0x09	; 9
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	f8 94       	cli
 112:	de bf       	out	0x3e, r29	; 62
 114:	0f be       	out	0x3f, r0	; 63
 116:	cd bf       	out	0x3d, r28	; 61
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	1f 91       	pop	r17
 11e:	08 95       	ret

00000120 <can_wrapper_send>:

uint8_t can_wrapper_send(uint32_t id, uint8_t length, ...) {
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
 128:	2e 97       	sbiw	r28, 0x0e	; 14
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
 134:	9f 89       	ldd	r25, Y+23	; 0x17
    can_t msg;
    va_list pl;
    uint_fast8_t i;

    msg.id = id;
 136:	4b 89       	ldd	r20, Y+19	; 0x13
 138:	5c 89       	ldd	r21, Y+20	; 0x14
 13a:	6d 89       	ldd	r22, Y+21	; 0x15
 13c:	7e 89       	ldd	r23, Y+22	; 0x16
 13e:	49 83       	std	Y+1, r20	; 0x01
 140:	5a 83       	std	Y+2, r21	; 0x02
 142:	6b 83       	std	Y+3, r22	; 0x03
 144:	7c 83       	std	Y+4, r23	; 0x04
    msg.flags.rtr = 0;
 146:	8d 81       	ldd	r24, Y+5	; 0x05
    msg.flags.extended = 1;
 148:	8e 7f       	andi	r24, 0xFE	; 254
 14a:	82 60       	ori	r24, 0x02	; 2
 14c:	8d 83       	std	Y+5, r24	; 0x05
    msg.length = length;
 14e:	9e 83       	std	Y+6, r25	; 0x06
 150:	fe 01       	movw	r30, r28
 152:	78 96       	adiw	r30, 0x18	; 24
 154:	de 01       	movw	r26, r28
 156:	17 96       	adiw	r26, 0x07	; 7

    va_start(pl, length);
    for (i = 0; i < length; i++) {
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	89 13       	cpse	r24, r25
 15c:	0d c0       	rjmp	.+26     	; 0x178 <can_wrapper_send+0x58>
        uint8_t x = va_arg(pl, int);
        msg.data[i] = x;
    }
    va_end(pl);

    return can_send_message(&msg);
 15e:	ce 01       	movw	r24, r28
 160:	01 96       	adiw	r24, 0x01	; 1
 162:	0e 94 98 03 	call	0x730	; 0x730 <can_send_message>
 166:	2e 96       	adiw	r28, 0x0e	; 14
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	f8 94       	cli
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	0f be       	out	0x3f, r0	; 63
 170:	cd bf       	out	0x3d, r28	; 61
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	08 95       	ret
        uint8_t x = va_arg(pl, int);
 178:	20 81       	ld	r18, Z
 17a:	32 96       	adiw	r30, 0x02	; 2
 17c:	2d 93       	st	X+, r18
    for (i = 0; i < length; i++) {
 17e:	8f 5f       	subi	r24, 0xFF	; 255
 180:	ec cf       	rjmp	.-40     	; 0x15a <can_wrapper_send+0x3a>

00000182 <_find_free_mob>:
 182:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_transmission_in_progress>
 186:	88 23       	and	r24, r24
 188:	11 f0       	breq	.+4      	; 0x18e <_find_free_mob+0xc>
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	08 95       	ret
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 196:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 19a:	20 7c       	andi	r18, 0xC0	; 192
 19c:	29 f0       	breq	.+10     	; 0x1a8 <_find_free_mob+0x26>
 19e:	8f 5f       	subi	r24, 0xFF	; 255
 1a0:	90 5f       	subi	r25, 0xF0	; 240
 1a2:	8f 30       	cpi	r24, 0x0F	; 15
 1a4:	b1 f7       	brne	.-20     	; 0x192 <_find_free_mob+0x10>
 1a6:	f1 cf       	rjmp	.-30     	; 0x18a <_find_free_mob+0x8>
 1a8:	08 95       	ret

000001aa <_disable_mob_interrupt>:
 1aa:	88 30       	cpi	r24, 0x08	; 8
 1ac:	80 f4       	brcc	.+32     	; 0x1ce <_disable_mob_interrupt+0x24>
 1ae:	40 91 de 00 	lds	r20, 0x00DE	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
 1b2:	21 e0       	ldi	r18, 0x01	; 1
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	b9 01       	movw	r22, r18
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <_disable_mob_interrupt+0x14>
 1ba:	66 0f       	add	r22, r22
 1bc:	77 1f       	adc	r23, r23
 1be:	8a 95       	dec	r24
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <_disable_mob_interrupt+0x10>
 1c2:	cb 01       	movw	r24, r22
 1c4:	80 95       	com	r24
 1c6:	84 23       	and	r24, r20
 1c8:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
 1cc:	08 95       	ret
 1ce:	30 91 df 00 	lds	r19, 0x00DF	; 0x8000df <__TEXT_REGION_LENGTH__+0x7e00df>
 1d2:	28 ef       	ldi	r18, 0xF8	; 248
 1d4:	28 0f       	add	r18, r24
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	01 c0       	rjmp	.+2      	; 0x1de <_disable_mob_interrupt+0x34>
 1dc:	88 0f       	add	r24, r24
 1de:	2a 95       	dec	r18
 1e0:	ea f7       	brpl	.-6      	; 0x1dc <_disable_mob_interrupt+0x32>
 1e2:	80 95       	com	r24
 1e4:	83 23       	and	r24, r19
 1e6:	80 93 df 00 	sts	0x00DF, r24	; 0x8000df <__TEXT_REGION_LENGTH__+0x7e00df>
 1ea:	08 95       	ret

000001ec <_enable_mob_interrupt>:
 1ec:	88 30       	cpi	r24, 0x08	; 8
 1ee:	68 f4       	brcc	.+26     	; 0x20a <_enable_mob_interrupt+0x1e>
 1f0:	90 91 de 00 	lds	r25, 0x00DE	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
 1f4:	21 e0       	ldi	r18, 0x01	; 1
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <_enable_mob_interrupt+0x10>
 1fa:	22 0f       	add	r18, r18
 1fc:	8a 95       	dec	r24
 1fe:	ea f7       	brpl	.-6      	; 0x1fa <_enable_mob_interrupt+0xe>
 200:	89 2f       	mov	r24, r25
 202:	82 2b       	or	r24, r18
 204:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
 208:	08 95       	ret
 20a:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <__TEXT_REGION_LENGTH__+0x7e00df>
 20e:	88 50       	subi	r24, 0x08	; 8
 210:	21 e0       	ldi	r18, 0x01	; 1
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	01 c0       	rjmp	.+2      	; 0x218 <_enable_mob_interrupt+0x2c>
 216:	22 0f       	add	r18, r18
 218:	8a 95       	dec	r24
 21a:	ea f7       	brpl	.-6      	; 0x216 <_enable_mob_interrupt+0x2a>
 21c:	89 2f       	mov	r24, r25
 21e:	82 2b       	or	r24, r18
 220:	80 93 df 00 	sts	0x00DF, r24	; 0x8000df <__TEXT_REGION_LENGTH__+0x7e00df>
 224:	08 95       	ret

00000226 <can_init>:
 226:	88 30       	cpi	r24, 0x08	; 8
 228:	08 f0       	brcs	.+2      	; 0x22c <can_init+0x6>
 22a:	39 c0       	rjmp	.+114    	; 0x29e <can_init+0x78>
 22c:	90 91 d8 00 	lds	r25, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 230:	91 60       	ori	r25, 0x01	; 1
 232:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 236:	23 e0       	ldi	r18, 0x03	; 3
 238:	82 9f       	mul	r24, r18
 23a:	c0 01       	movw	r24, r0
 23c:	11 24       	eor	r1, r1
 23e:	fc 01       	movw	r30, r24
 240:	ec 56       	subi	r30, 0x6C	; 108
 242:	ff 4f       	sbci	r31, 0xFF	; 255
 244:	e4 91       	lpm	r30, Z
 246:	e0 93 e2 00 	sts	0x00E2, r30	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
 24a:	fc 01       	movw	r30, r24
 24c:	eb 56       	subi	r30, 0x6B	; 107
 24e:	ff 4f       	sbci	r31, 0xFF	; 255
 250:	e4 91       	lpm	r30, Z
 252:	e0 93 e3 00 	sts	0x00E3, r30	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
 256:	8a 56       	subi	r24, 0x6A	; 106
 258:	9f 4f       	sbci	r25, 0xFF	; 255
 25a:	fc 01       	movw	r30, r24
 25c:	84 91       	lpm	r24, Z
 25e:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
 262:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
 266:	80 eb       	ldi	r24, 0xB0	; 176
 268:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
 26c:	87 ec       	ldi	r24, 0xC7	; 199
 26e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <can_disable_filter>
 278:	49 e7       	ldi	r20, 0x79	; 121
 27a:	51 e0       	ldi	r21, 0x01	; 1
 27c:	60 e1       	ldi	r22, 0x10	; 16
 27e:	89 e5       	ldi	r24, 0x59	; 89
 280:	92 e0       	ldi	r25, 0x02	; 2
 282:	0e 94 71 04 	call	0x8e2	; 0x8e2 <can_buffer_init>
 286:	43 e0       	ldi	r20, 0x03	; 3
 288:	51 e0       	ldi	r21, 0x01	; 1
 28a:	68 e0       	ldi	r22, 0x08	; 8
 28c:	83 e7       	ldi	r24, 0x73	; 115
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	0e 94 71 04 	call	0x8e2	; 0x8e2 <can_buffer_init>
 294:	82 e0       	ldi	r24, 0x02	; 2
 296:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	08 95       	ret
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	08 95       	ret

000002a2 <__vector_18>:
 2a2:	1f 92       	push	r1
 2a4:	0f 92       	push	r0
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	0f 92       	push	r0
 2aa:	11 24       	eor	r1, r1
 2ac:	0b b6       	in	r0, 0x3b	; 59
 2ae:	0f 92       	push	r0
 2b0:	2f 93       	push	r18
 2b2:	3f 93       	push	r19
 2b4:	4f 93       	push	r20
 2b6:	5f 93       	push	r21
 2b8:	6f 93       	push	r22
 2ba:	7f 93       	push	r23
 2bc:	8f 93       	push	r24
 2be:	9f 93       	push	r25
 2c0:	af 93       	push	r26
 2c2:	bf 93       	push	r27
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	ef 93       	push	r30
 2ca:	ff 93       	push	r31
 2cc:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 2d0:	80 7f       	andi	r24, 0xF0	; 240
 2d2:	80 3f       	cpi	r24, 0xF0	; 240
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <__vector_18+0x36>
 2d6:	58 c0       	rjmp	.+176    	; 0x388 <__vector_18+0xe6>
 2d8:	c0 91 ed 00 	lds	r28, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 2dc:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 2e0:	80 7f       	andi	r24, 0xF0	; 240
 2e2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 2e6:	d0 91 ec 00 	lds	r29, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 2ea:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 2ee:	86 ff       	sbrs	r24, 6
 2f0:	36 c0       	rjmp	.+108    	; 0x35e <__vector_18+0xbc>
 2f2:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 2f6:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 2fa:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 2fe:	83 e7       	ldi	r24, 0x73	; 115
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	0e 94 b4 04 	call	0x968	; 0x968 <can_buffer_get_dequeue_ptr>
 306:	00 97       	sbiw	r24, 0x00	; 0
 308:	61 f0       	breq	.+24     	; 0x322 <__vector_18+0x80>
 30a:	0e 94 10 03 	call	0x620	; 0x620 <at90can_copy_message_to_mob>
 30e:	83 e7       	ldi	r24, 0x73	; 115
 310:	91 e0       	ldi	r25, 0x01	; 1
 312:	0e 94 c9 04 	call	0x992	; 0x992 <can_buffer_dequeue>
 316:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 31a:	80 64       	ori	r24, 0x40	; 64
 31c:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 320:	07 c0       	rjmp	.+14     	; 0x330 <__vector_18+0x8e>
 322:	8d 2f       	mov	r24, r29
 324:	82 95       	swap	r24
 326:	8f 70       	andi	r24, 0x0F	; 15
 328:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_disable_mob_interrupt>
 32c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_transmission_in_progress>
 330:	c0 93 ed 00 	sts	0x00ED, r28	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 334:	ff 91       	pop	r31
 336:	ef 91       	pop	r30
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	bf 91       	pop	r27
 33e:	af 91       	pop	r26
 340:	9f 91       	pop	r25
 342:	8f 91       	pop	r24
 344:	7f 91       	pop	r23
 346:	6f 91       	pop	r22
 348:	5f 91       	pop	r21
 34a:	4f 91       	pop	r20
 34c:	3f 91       	pop	r19
 34e:	2f 91       	pop	r18
 350:	0f 90       	pop	r0
 352:	0b be       	out	0x3b, r0	; 59
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti
 35e:	89 e5       	ldi	r24, 0x59	; 89
 360:	92 e0       	ldi	r25, 0x02	; 2
 362:	0e 94 90 04 	call	0x920	; 0x920 <can_buffer_get_enqueue_ptr>
 366:	00 97       	sbiw	r24, 0x00	; 0
 368:	31 f0       	breq	.+12     	; 0x376 <__vector_18+0xd4>
 36a:	0e 94 c9 03 	call	0x792	; 0x792 <at90can_copy_mob_to_message>
 36e:	89 e5       	ldi	r24, 0x59	; 89
 370:	92 e0       	ldi	r25, 0x02	; 2
 372:	0e 94 a5 04 	call	0x94a	; 0x94a <can_buffer_enqueue>
 376:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 37a:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 37e:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 382:	80 71       	andi	r24, 0x10	; 16
 384:	80 68       	ori	r24, 0x80	; 128
 386:	ca cf       	rjmp	.-108    	; 0x31c <__vector_18+0x7a>
 388:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
 38c:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
 390:	d1 cf       	rjmp	.-94     	; 0x334 <__vector_18+0x92>

00000392 <__vector_19>:
 392:	1f 92       	push	r1
 394:	0f 92       	push	r0
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	0f 92       	push	r0
 39a:	11 24       	eor	r1, r1
 39c:	0f 90       	pop	r0
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	0f 90       	pop	r0
 3a2:	1f 90       	pop	r1
 3a4:	18 95       	reti

000003a6 <can_check_message>:
 3a6:	89 e5       	ldi	r24, 0x59	; 89
 3a8:	92 e0       	ldi	r25, 0x02	; 2
 3aa:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <can_buffer_empty>
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	89 27       	eor	r24, r25
 3b2:	08 95       	ret

000003b4 <can_check_free_buffer>:
 3b4:	83 e7       	ldi	r24, 0x73	; 115
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	0e 94 85 04 	call	0x90a	; 0x90a <can_buffer_full>
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	89 27       	eor	r24, r25
 3c0:	08 95       	ret

000003c2 <can_disable_filter>:
 3c2:	cf 93       	push	r28
 3c4:	8f 30       	cpi	r24, 0x0F	; 15
 3c6:	c0 f0       	brcs	.+48     	; 0x3f8 <can_disable_filter+0x36>
 3c8:	8f 3f       	cpi	r24, 0xFF	; 255
 3ca:	09 f0       	breq	.+2      	; 0x3ce <can_disable_filter+0xc>
 3cc:	46 c0       	rjmp	.+140    	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
 3ce:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <__TEXT_REGION_LENGTH__+0x7e00df>
 3d2:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 3dc:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 3e0:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 3e4:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 3e8:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 3ec:	80 5f       	subi	r24, 0xF0	; 240
 3ee:	80 3f       	cpi	r24, 0xF0	; 240
 3f0:	99 f7       	brne	.-26     	; 0x3d8 <can_disable_filter+0x16>
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	cf 91       	pop	r28
 3f6:	08 95       	ret
 3f8:	90 e8       	ldi	r25, 0x80	; 128
 3fa:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 3fe:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 402:	93 fd       	sbrc	r25, 3
 404:	fc cf       	rjmp	.-8      	; 0x3fe <can_disable_filter+0x3c>
 406:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 40a:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 40e:	c9 2f       	mov	r28, r25
 410:	c4 70       	andi	r28, 0x04	; 4
 412:	92 fd       	sbrc	r25, 2
 414:	fa cf       	rjmp	.-12     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
 416:	98 2f       	mov	r25, r24
 418:	92 95       	swap	r25
 41a:	90 7f       	andi	r25, 0xF0	; 240
 41c:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 420:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 424:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 428:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 42c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_disable_mob_interrupt>
 430:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 434:	c0 93 ed 00 	sts	0x00ED, r28	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 438:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 43c:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 440:	c0 5f       	subi	r28, 0xF0	; 240
 442:	c0 3f       	cpi	r28, 0xF0	; 240
 444:	b9 f7       	brne	.-18     	; 0x434 <__FUSE_REGION_LENGTH__+0x34>
 446:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 44a:	82 e0       	ldi	r24, 0x02	; 2
 44c:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 450:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 454:	82 ff       	sbrs	r24, 2
 456:	fc cf       	rjmp	.-8      	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
 458:	cc cf       	rjmp	.-104    	; 0x3f2 <can_disable_filter+0x30>
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	cb cf       	rjmp	.-106    	; 0x3f4 <can_disable_filter+0x32>

0000045e <can_set_filter>:
 45e:	cf 93       	push	r28
 460:	fb 01       	movw	r30, r22
 462:	8f 30       	cpi	r24, 0x0F	; 15
 464:	08 f0       	brcs	.+2      	; 0x468 <can_set_filter+0xa>
 466:	da c0       	rjmp	.+436    	; 0x61c <can_set_filter+0x1be>
 468:	90 e8       	ldi	r25, 0x80	; 128
 46a:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 46e:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 472:	93 fd       	sbrc	r25, 3
 474:	fc cf       	rjmp	.-8      	; 0x46e <can_set_filter+0x10>
 476:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 47a:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 47e:	c9 2f       	mov	r28, r25
 480:	c4 70       	andi	r28, 0x04	; 4
 482:	92 fd       	sbrc	r25, 2
 484:	fa cf       	rjmp	.-12     	; 0x47a <can_set_filter+0x1c>
 486:	98 2f       	mov	r25, r24
 488:	92 95       	swap	r25
 48a:	90 7f       	andi	r25, 0xF0	; 240
 48c:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 490:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 494:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 498:	90 85       	ldd	r25, Z+8	; 0x08
 49a:	9c 70       	andi	r25, 0x0C	; 12
 49c:	9c 30       	cpi	r25, 0x0C	; 12
 49e:	09 f0       	breq	.+2      	; 0x4a2 <can_set_filter+0x44>
 4a0:	8f c0       	rjmp	.+286    	; 0x5c0 <can_set_filter+0x162>
 4a2:	90 81       	ld	r25, Z
 4a4:	99 0f       	add	r25, r25
 4a6:	99 0f       	add	r25, r25
 4a8:	99 0f       	add	r25, r25
 4aa:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 4ae:	40 81       	ld	r20, Z
 4b0:	51 81       	ldd	r21, Z+1	; 0x01
 4b2:	62 81       	ldd	r22, Z+2	; 0x02
 4b4:	73 81       	ldd	r23, Z+3	; 0x03
 4b6:	a5 e0       	ldi	r26, 0x05	; 5
 4b8:	76 95       	lsr	r23
 4ba:	67 95       	ror	r22
 4bc:	57 95       	ror	r21
 4be:	47 95       	ror	r20
 4c0:	aa 95       	dec	r26
 4c2:	d1 f7       	brne	.-12     	; 0x4b8 <can_set_filter+0x5a>
 4c4:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 4c8:	40 81       	ld	r20, Z
 4ca:	51 81       	ldd	r21, Z+1	; 0x01
 4cc:	62 81       	ldd	r22, Z+2	; 0x02
 4ce:	73 81       	ldd	r23, Z+3	; 0x03
 4d0:	bd e0       	ldi	r27, 0x0D	; 13
 4d2:	76 95       	lsr	r23
 4d4:	67 95       	ror	r22
 4d6:	57 95       	ror	r21
 4d8:	47 95       	ror	r20
 4da:	ba 95       	dec	r27
 4dc:	d1 f7       	brne	.-12     	; 0x4d2 <can_set_filter+0x74>
 4de:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 4e2:	40 81       	ld	r20, Z
 4e4:	51 81       	ldd	r21, Z+1	; 0x01
 4e6:	62 81       	ldd	r22, Z+2	; 0x02
 4e8:	73 81       	ldd	r23, Z+3	; 0x03
 4ea:	95 e1       	ldi	r25, 0x15	; 21
 4ec:	76 95       	lsr	r23
 4ee:	67 95       	ror	r22
 4f0:	57 95       	ror	r21
 4f2:	47 95       	ror	r20
 4f4:	9a 95       	dec	r25
 4f6:	d1 f7       	brne	.-12     	; 0x4ec <can_set_filter+0x8e>
 4f8:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 4fc:	24 81       	ldd	r18, Z+4	; 0x04
 4fe:	98 e0       	ldi	r25, 0x08	; 8
 500:	29 9f       	mul	r18, r25
 502:	90 01       	movw	r18, r0
 504:	11 24       	eor	r1, r1
 506:	21 60       	ori	r18, 0x01	; 1
 508:	20 93 f4 00 	sts	0x00F4, r18	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
 50c:	44 81       	ldd	r20, Z+4	; 0x04
 50e:	55 81       	ldd	r21, Z+5	; 0x05
 510:	66 81       	ldd	r22, Z+6	; 0x06
 512:	77 81       	ldd	r23, Z+7	; 0x07
 514:	25 e0       	ldi	r18, 0x05	; 5
 516:	76 95       	lsr	r23
 518:	67 95       	ror	r22
 51a:	57 95       	ror	r21
 51c:	47 95       	ror	r20
 51e:	2a 95       	dec	r18
 520:	d1 f7       	brne	.-12     	; 0x516 <can_set_filter+0xb8>
 522:	40 93 f5 00 	sts	0x00F5, r20	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
 526:	44 81       	ldd	r20, Z+4	; 0x04
 528:	55 81       	ldd	r21, Z+5	; 0x05
 52a:	66 81       	ldd	r22, Z+6	; 0x06
 52c:	77 81       	ldd	r23, Z+7	; 0x07
 52e:	3d e0       	ldi	r19, 0x0D	; 13
 530:	76 95       	lsr	r23
 532:	67 95       	ror	r22
 534:	57 95       	ror	r21
 536:	47 95       	ror	r20
 538:	3a 95       	dec	r19
 53a:	d1 f7       	brne	.-12     	; 0x530 <can_set_filter+0xd2>
 53c:	40 93 f6 00 	sts	0x00F6, r20	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
 540:	44 81       	ldd	r20, Z+4	; 0x04
 542:	55 81       	ldd	r21, Z+5	; 0x05
 544:	66 81       	ldd	r22, Z+6	; 0x06
 546:	77 81       	ldd	r23, Z+7	; 0x07
 548:	a5 e1       	ldi	r26, 0x15	; 21
 54a:	76 95       	lsr	r23
 54c:	67 95       	ror	r22
 54e:	57 95       	ror	r21
 550:	47 95       	ror	r20
 552:	aa 95       	dec	r26
 554:	d1 f7       	brne	.-12     	; 0x54a <can_set_filter+0xec>
 556:	40 93 f7 00 	sts	0x00F7, r20	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
 55a:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 55e:	90 61       	ori	r25, 0x10	; 16
 560:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 564:	90 85       	ldd	r25, Z+8	; 0x08
 566:	91 ff       	sbrs	r25, 1
 568:	0d c0       	rjmp	.+26     	; 0x584 <can_set_filter+0x126>
 56a:	90 91 f4 00 	lds	r25, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
 56e:	94 60       	ori	r25, 0x04	; 4
 570:	90 93 f4 00 	sts	0x00F4, r25	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
 574:	90 85       	ldd	r25, Z+8	; 0x08
 576:	90 ff       	sbrs	r25, 0
 578:	05 c0       	rjmp	.+10     	; 0x584 <can_set_filter+0x126>
 57a:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 57e:	94 60       	ori	r25, 0x04	; 4
 580:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 584:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 588:	90 68       	ori	r25, 0x80	; 128
 58a:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 58e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_enable_mob_interrupt>
 592:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 596:	c0 93 ed 00 	sts	0x00ED, r28	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 59a:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 59e:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 5a2:	c0 5f       	subi	r28, 0xF0	; 240
 5a4:	c0 3f       	cpi	r28, 0xF0	; 240
 5a6:	b9 f7       	brne	.-18     	; 0x596 <can_set_filter+0x138>
 5a8:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 5ac:	82 e0       	ldi	r24, 0x02	; 2
 5ae:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 5b2:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
 5b6:	82 ff       	sbrs	r24, 2
 5b8:	fc cf       	rjmp	.-8      	; 0x5b2 <can_set_filter+0x154>
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	cf 91       	pop	r28
 5be:	08 95       	ret
 5c0:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 5c4:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 5c8:	90 81       	ld	r25, Z
 5ca:	92 95       	swap	r25
 5cc:	99 0f       	add	r25, r25
 5ce:	90 7e       	andi	r25, 0xE0	; 224
 5d0:	90 93 f2 00 	sts	0x00F2, r25	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 5d4:	20 81       	ld	r18, Z
 5d6:	31 81       	ldd	r19, Z+1	; 0x01
 5d8:	43 e0       	ldi	r20, 0x03	; 3
 5da:	36 95       	lsr	r19
 5dc:	27 95       	ror	r18
 5de:	4a 95       	dec	r20
 5e0:	e1 f7       	brne	.-8      	; 0x5da <can_set_filter+0x17c>
 5e2:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 5e6:	90 85       	ldd	r25, Z+8	; 0x08
 5e8:	9c 70       	andi	r25, 0x0C	; 12
 5ea:	a9 f0       	breq	.+42     	; 0x616 <can_set_filter+0x1b8>
 5ec:	91 e0       	ldi	r25, 0x01	; 1
 5ee:	90 93 f4 00 	sts	0x00F4, r25	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
 5f2:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
 5f6:	94 81       	ldd	r25, Z+4	; 0x04
 5f8:	92 95       	swap	r25
 5fa:	99 0f       	add	r25, r25
 5fc:	90 7e       	andi	r25, 0xE0	; 224
 5fe:	90 93 f6 00 	sts	0x00F6, r25	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
 602:	24 81       	ldd	r18, Z+4	; 0x04
 604:	35 81       	ldd	r19, Z+5	; 0x05
 606:	93 e0       	ldi	r25, 0x03	; 3
 608:	36 95       	lsr	r19
 60a:	27 95       	ror	r18
 60c:	9a 95       	dec	r25
 60e:	e1 f7       	brne	.-8      	; 0x608 <can_set_filter+0x1aa>
 610:	20 93 f7 00 	sts	0x00F7, r18	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
 614:	a7 cf       	rjmp	.-178    	; 0x564 <can_set_filter+0x106>
 616:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
 61a:	eb cf       	rjmp	.-42     	; 0x5f2 <can_set_filter+0x194>
 61c:	80 e0       	ldi	r24, 0x00	; 0
 61e:	ce cf       	rjmp	.-100    	; 0x5bc <can_set_filter+0x15e>

00000620 <at90can_copy_message_to_mob>:
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	00 d0       	rcall	.+0      	; 0x626 <at90can_copy_message_to_mob+0x6>
 626:	00 d0       	rcall	.+0      	; 0x628 <at90can_copy_message_to_mob+0x8>
 628:	cd b7       	in	r28, 0x3d	; 61
 62a:	de b7       	in	r29, 0x3e	; 62
 62c:	fc 01       	movw	r30, r24
 62e:	85 81       	ldd	r24, Z+5	; 0x05
 630:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 634:	84 81       	ldd	r24, Z+4	; 0x04
 636:	81 ff       	sbrs	r24, 1
 638:	32 c0       	rjmp	.+100    	; 0x69e <at90can_copy_message_to_mob+0x7e>
 63a:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 63e:	80 61       	ori	r24, 0x10	; 16
 640:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 644:	80 81       	ld	r24, Z
 646:	88 0f       	add	r24, r24
 648:	88 0f       	add	r24, r24
 64a:	88 0f       	add	r24, r24
 64c:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 650:	80 81       	ld	r24, Z
 652:	91 81       	ldd	r25, Z+1	; 0x01
 654:	a2 81       	ldd	r26, Z+2	; 0x02
 656:	b3 81       	ldd	r27, Z+3	; 0x03
 658:	33 e0       	ldi	r19, 0x03	; 3
 65a:	88 0f       	add	r24, r24
 65c:	99 1f       	adc	r25, r25
 65e:	aa 1f       	adc	r26, r26
 660:	bb 1f       	adc	r27, r27
 662:	3a 95       	dec	r19
 664:	d1 f7       	brne	.-12     	; 0x65a <at90can_copy_message_to_mob+0x3a>
 666:	89 83       	std	Y+1, r24	; 0x01
 668:	9a 83       	std	Y+2, r25	; 0x02
 66a:	ab 83       	std	Y+3, r26	; 0x03
 66c:	bc 83       	std	Y+4, r27	; 0x04
 66e:	8a 81       	ldd	r24, Y+2	; 0x02
 670:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 674:	8b 81       	ldd	r24, Y+3	; 0x03
 676:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 67a:	8c 81       	ldd	r24, Y+4	; 0x04
 67c:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 680:	84 81       	ldd	r24, Z+4	; 0x04
 682:	80 ff       	sbrs	r24, 0
 684:	1e c0       	rjmp	.+60     	; 0x6c2 <at90can_copy_message_to_mob+0xa2>
 686:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 68a:	84 60       	ori	r24, 0x04	; 4
 68c:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	df 91       	pop	r29
 69a:	cf 91       	pop	r28
 69c:	08 95       	ret
 69e:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 6a2:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 6a6:	80 81       	ld	r24, Z
 6a8:	82 95       	swap	r24
 6aa:	88 0f       	add	r24, r24
 6ac:	80 7e       	andi	r24, 0xE0	; 224
 6ae:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 6b2:	80 81       	ld	r24, Z
 6b4:	91 81       	ldd	r25, Z+1	; 0x01
 6b6:	23 e0       	ldi	r18, 0x03	; 3
 6b8:	96 95       	lsr	r25
 6ba:	87 95       	ror	r24
 6bc:	2a 95       	dec	r18
 6be:	e1 f7       	brne	.-8      	; 0x6b8 <at90can_copy_message_to_mob+0x98>
 6c0:	dd cf       	rjmp	.-70     	; 0x67c <at90can_copy_message_to_mob+0x5c>
 6c2:	9f 01       	movw	r18, r30
 6c4:	2a 5f       	subi	r18, 0xFA	; 250
 6c6:	3f 4f       	sbci	r19, 0xFF	; 255
 6c8:	d9 01       	movw	r26, r18
 6ca:	95 81       	ldd	r25, Z+5	; 0x05
 6cc:	8a 2f       	mov	r24, r26
 6ce:	82 1b       	sub	r24, r18
 6d0:	89 17       	cp	r24, r25
 6d2:	f0 f6       	brcc	.-68     	; 0x690 <at90can_copy_message_to_mob+0x70>
 6d4:	8d 91       	ld	r24, X+
 6d6:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
 6da:	f7 cf       	rjmp	.-18     	; 0x6ca <at90can_copy_message_to_mob+0xaa>

000006dc <at90can_send_message>:
 6dc:	0f 93       	push	r16
 6de:	1f 93       	push	r17
 6e0:	cf 93       	push	r28
 6e2:	8c 01       	movw	r16, r24
 6e4:	0e 94 c1 00 	call	0x182	; 0x182 <_find_free_mob>
 6e8:	c8 2f       	mov	r28, r24
 6ea:	8f 30       	cpi	r24, 0x0F	; 15
 6ec:	f8 f4       	brcc	.+62     	; 0x72c <at90can_send_message+0x50>
 6ee:	82 95       	swap	r24
 6f0:	80 7f       	andi	r24, 0xF0	; 240
 6f2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 6f6:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 6fa:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 6fe:	c8 01       	movw	r24, r16
 700:	0e 94 10 03 	call	0x620	; 0x620 <at90can_copy_message_to_mob>
 704:	8c 2f       	mov	r24, r28
 706:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_enable_mob_interrupt>
 70a:	8f b7       	in	r24, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 70c:	f8 94       	cli
 70e:	91 e0       	ldi	r25, 0x01	; 1
 710:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_transmission_in_progress>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
 714:	8f bf       	out	0x3f, r24	; 63
 716:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 71a:	80 64       	ori	r24, 0x40	; 64
 71c:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	8c 0f       	add	r24, r28
 724:	cf 91       	pop	r28
 726:	1f 91       	pop	r17
 728:	0f 91       	pop	r16
 72a:	08 95       	ret
 72c:	80 e0       	ldi	r24, 0x00	; 0
 72e:	fa cf       	rjmp	.-12     	; 0x724 <at90can_send_message+0x48>

00000730 <can_send_message>:
 730:	1f 93       	push	r17
 732:	cf 93       	push	r28
 734:	df 93       	push	r29
 736:	ec 01       	movw	r28, r24
 738:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_transmission_in_progress>
 73c:	88 23       	and	r24, r24
 73e:	e1 f0       	breq	.+56     	; 0x778 <can_send_message+0x48>
 740:	83 e7       	ldi	r24, 0x73	; 115
 742:	91 e0       	ldi	r25, 0x01	; 1
 744:	0e 94 90 04 	call	0x920	; 0x920 <can_buffer_get_enqueue_ptr>
 748:	dc 01       	movw	r26, r24
 74a:	89 2b       	or	r24, r25
 74c:	d9 f0       	breq	.+54     	; 0x784 <can_send_message+0x54>
 74e:	9e e0       	ldi	r25, 0x0E	; 14
 750:	fe 01       	movw	r30, r28
 752:	01 90       	ld	r0, Z+
 754:	0d 92       	st	X+, r0
 756:	9a 95       	dec	r25
 758:	e1 f7       	brne	.-8      	; 0x752 <can_send_message+0x22>
 75a:	1f b7       	in	r17, 0x3f	; 63
    cli();
 75c:	f8 94       	cli
 75e:	80 e0       	ldi	r24, 0x00	; 0
 760:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_transmission_in_progress>
 764:	99 23       	and	r25, r25
 766:	29 f0       	breq	.+10     	; 0x772 <can_send_message+0x42>
 768:	83 e7       	ldi	r24, 0x73	; 115
 76a:	91 e0       	ldi	r25, 0x01	; 1
 76c:	0e 94 a5 04 	call	0x94a	; 0x94a <can_buffer_enqueue>
 770:	81 e0       	ldi	r24, 0x01	; 1
    SREG = *__s;
 772:	1f bf       	out	0x3f, r17	; 63
 774:	81 11       	cpse	r24, r1
 776:	0b c0       	rjmp	.+22     	; 0x78e <can_send_message+0x5e>
 778:	ce 01       	movw	r24, r28
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	1f 91       	pop	r17
 780:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <at90can_send_message>
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	df 91       	pop	r29
 788:	cf 91       	pop	r28
 78a:	1f 91       	pop	r17
 78c:	08 95       	ret
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	fa cf       	rjmp	.-12     	; 0x786 <can_send_message+0x56>

00000792 <at90can_copy_mob_to_message>:
 792:	cf 93       	push	r28
 794:	df 93       	push	r29
 796:	00 d0       	rcall	.+0      	; 0x798 <at90can_copy_mob_to_message+0x6>
 798:	00 d0       	rcall	.+0      	; 0x79a <at90can_copy_mob_to_message+0x8>
 79a:	cd b7       	in	r28, 0x3d	; 61
 79c:	de b7       	in	r29, 0x3e	; 62
 79e:	fc 01       	movw	r30, r24
 7a0:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 7a4:	89 2f       	mov	r24, r25
 7a6:	8f 70       	andi	r24, 0x0F	; 15
 7a8:	85 83       	std	Z+5, r24	; 0x05
 7aa:	84 81       	ldd	r24, Z+4	; 0x04
 7ac:	94 ff       	sbrs	r25, 4
 7ae:	2c c0       	rjmp	.+88     	; 0x808 <at90can_copy_mob_to_message+0x76>
 7b0:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 7b4:	99 83       	std	Y+1, r25	; 0x01
 7b6:	90 91 f1 00 	lds	r25, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 7ba:	9a 83       	std	Y+2, r25	; 0x02
 7bc:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 7c0:	9b 83       	std	Y+3, r25	; 0x03
 7c2:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 7c6:	9c 83       	std	Y+4, r25	; 0x04
 7c8:	49 81       	ldd	r20, Y+1	; 0x01
 7ca:	5a 81       	ldd	r21, Y+2	; 0x02
 7cc:	6b 81       	ldd	r22, Y+3	; 0x03
 7ce:	7c 81       	ldd	r23, Y+4	; 0x04
 7d0:	93 e0       	ldi	r25, 0x03	; 3
 7d2:	76 95       	lsr	r23
 7d4:	67 95       	ror	r22
 7d6:	57 95       	ror	r21
 7d8:	47 95       	ror	r20
 7da:	9a 95       	dec	r25
 7dc:	d1 f7       	brne	.-12     	; 0x7d2 <at90can_copy_mob_to_message+0x40>
 7de:	40 83       	st	Z, r20
 7e0:	51 83       	std	Z+1, r21	; 0x01
 7e2:	62 83       	std	Z+2, r22	; 0x02
 7e4:	73 83       	std	Z+3, r23	; 0x03
 7e6:	82 60       	ori	r24, 0x02	; 2
 7e8:	84 83       	std	Z+4, r24	; 0x04
 7ea:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 7ee:	84 81       	ldd	r24, Z+4	; 0x04
 7f0:	92 ff       	sbrs	r25, 2
 7f2:	1e c0       	rjmp	.+60     	; 0x830 <at90can_copy_mob_to_message+0x9e>
 7f4:	81 60       	ori	r24, 0x01	; 1
 7f6:	84 83       	std	Z+4, r24	; 0x04
 7f8:	81 e0       	ldi	r24, 0x01	; 1
 7fa:	0f 90       	pop	r0
 7fc:	0f 90       	pop	r0
 7fe:	0f 90       	pop	r0
 800:	0f 90       	pop	r0
 802:	df 91       	pop	r29
 804:	cf 91       	pop	r28
 806:	08 95       	ret
 808:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 80c:	92 95       	swap	r25
 80e:	96 95       	lsr	r25
 810:	97 70       	andi	r25, 0x07	; 7
 812:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 816:	28 e0       	ldi	r18, 0x08	; 8
 818:	42 9f       	mul	r20, r18
 81a:	a0 01       	movw	r20, r0
 81c:	11 24       	eor	r1, r1
 81e:	49 2b       	or	r20, r25
 820:	60 e0       	ldi	r22, 0x00	; 0
 822:	70 e0       	ldi	r23, 0x00	; 0
 824:	40 83       	st	Z, r20
 826:	51 83       	std	Z+1, r21	; 0x01
 828:	62 83       	std	Z+2, r22	; 0x02
 82a:	73 83       	std	Z+3, r23	; 0x03
 82c:	8d 7f       	andi	r24, 0xFD	; 253
 82e:	dc cf       	rjmp	.-72     	; 0x7e8 <at90can_copy_mob_to_message+0x56>
 830:	8e 7f       	andi	r24, 0xFE	; 254
 832:	84 83       	std	Z+4, r24	; 0x04
 834:	9f 01       	movw	r18, r30
 836:	2a 5f       	subi	r18, 0xFA	; 250
 838:	3f 4f       	sbci	r19, 0xFF	; 255
 83a:	d9 01       	movw	r26, r18
 83c:	95 81       	ldd	r25, Z+5	; 0x05
 83e:	8a 2f       	mov	r24, r26
 840:	82 1b       	sub	r24, r18
 842:	89 17       	cp	r24, r25
 844:	c8 f6       	brcc	.-78     	; 0x7f8 <at90can_copy_mob_to_message+0x66>
 846:	80 91 fa 00 	lds	r24, 0x00FA	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
 84a:	8d 93       	st	X+, r24
 84c:	f7 cf       	rjmp	.-18     	; 0x83c <at90can_copy_mob_to_message+0xaa>

0000084e <at90can_get_message>:
 84e:	0f 93       	push	r16
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	8c 01       	movw	r16, r24
 856:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_check_message>
 85a:	81 11       	cpse	r24, r1
 85c:	05 c0       	rjmp	.+10     	; 0x868 <at90can_get_message+0x1a>
 85e:	80 e0       	ldi	r24, 0x00	; 0
 860:	cf 91       	pop	r28
 862:	1f 91       	pop	r17
 864:	0f 91       	pop	r16
 866:	08 95       	ret
 868:	80 e0       	ldi	r24, 0x00	; 0
 86a:	c0 e0       	ldi	r28, 0x00	; 0
 86c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 870:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 874:	95 ff       	sbrs	r25, 5
 876:	16 c0       	rjmp	.+44     	; 0x8a4 <at90can_get_message+0x56>
 878:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 87c:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 880:	c8 01       	movw	r24, r16
 882:	0e 94 c9 03 	call	0x792	; 0x792 <at90can_copy_mob_to_message>
 886:	18 2f       	mov	r17, r24
 888:	8c 2f       	mov	r24, r28
 88a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_enable_mob_interrupt>
 88e:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 892:	80 71       	andi	r24, 0x10	; 16
 894:	80 68       	ori	r24, 0x80	; 128
 896:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 89a:	11 23       	and	r17, r17
 89c:	01 f3       	breq	.-64     	; 0x85e <at90can_get_message+0x10>
 89e:	81 e0       	ldi	r24, 0x01	; 1
 8a0:	8c 0f       	add	r24, r28
 8a2:	de cf       	rjmp	.-68     	; 0x860 <at90can_get_message+0x12>
 8a4:	cf 5f       	subi	r28, 0xFF	; 255
 8a6:	80 5f       	subi	r24, 0xF0	; 240
 8a8:	cf 30       	cpi	r28, 0x0F	; 15
 8aa:	01 f7       	brne	.-64     	; 0x86c <at90can_get_message+0x1e>
 8ac:	d8 cf       	rjmp	.-80     	; 0x85e <at90can_get_message+0x10>

000008ae <can_get_message>:
 8ae:	cf 93       	push	r28
 8b0:	df 93       	push	r29
 8b2:	ec 01       	movw	r28, r24
 8b4:	89 e5       	ldi	r24, 0x59	; 89
 8b6:	92 e0       	ldi	r25, 0x02	; 2
 8b8:	0e 94 b4 04 	call	0x968	; 0x968 <can_buffer_get_dequeue_ptr>
 8bc:	fc 01       	movw	r30, r24
 8be:	89 2b       	or	r24, r25
 8c0:	71 f0       	breq	.+28     	; 0x8de <can_get_message+0x30>
 8c2:	9e e0       	ldi	r25, 0x0E	; 14
 8c4:	de 01       	movw	r26, r28
 8c6:	01 90       	ld	r0, Z+
 8c8:	0d 92       	st	X+, r0
 8ca:	9a 95       	dec	r25
 8cc:	e1 f7       	brne	.-8      	; 0x8c6 <can_get_message+0x18>
 8ce:	89 e5       	ldi	r24, 0x59	; 89
 8d0:	92 e0       	ldi	r25, 0x02	; 2
 8d2:	0e 94 c9 04 	call	0x992	; 0x992 <can_buffer_dequeue>
 8d6:	8f ef       	ldi	r24, 0xFF	; 255
 8d8:	df 91       	pop	r29
 8da:	cf 91       	pop	r28
 8dc:	08 95       	ret
 8de:	80 e0       	ldi	r24, 0x00	; 0
 8e0:	fb cf       	rjmp	.-10     	; 0x8d8 <can_get_message+0x2a>

000008e2 <can_buffer_init>:
 8e2:	fc 01       	movw	r30, r24
 8e4:	8f b7       	in	r24, 0x3f	; 63
    cli();
 8e6:	f8 94       	cli
 8e8:	62 83       	std	Z+2, r22	; 0x02
 8ea:	51 83       	std	Z+1, r21	; 0x01
 8ec:	40 83       	st	Z, r20
 8ee:	14 82       	std	Z+4, r1	; 0x04
 8f0:	15 82       	std	Z+5, r1	; 0x05
 8f2:	13 82       	std	Z+3, r1	; 0x03
    SREG = *__s;
 8f4:	8f bf       	out	0x3f, r24	; 63
    __asm__ volatile ("" ::: "memory");
 8f6:	08 95       	ret

000008f8 <can_buffer_empty>:
 8f8:	2f b7       	in	r18, 0x3f	; 63
    cli();
 8fa:	f8 94       	cli
 8fc:	fc 01       	movw	r30, r24
 8fe:	93 81       	ldd	r25, Z+3	; 0x03
    SREG = *__s;
 900:	2f bf       	out	0x3f, r18	; 63
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	91 11       	cpse	r25, r1
 906:	80 e0       	ldi	r24, 0x00	; 0
 908:	08 95       	ret

0000090a <can_buffer_full>:
 90a:	3f b7       	in	r19, 0x3f	; 63
    cli();
 90c:	f8 94       	cli
 90e:	fc 01       	movw	r30, r24
 910:	23 81       	ldd	r18, Z+3	; 0x03
 912:	92 81       	ldd	r25, Z+2	; 0x02
    SREG = *__s;
 914:	3f bf       	out	0x3f, r19	; 63
 916:	81 e0       	ldi	r24, 0x01	; 1
 918:	29 17       	cp	r18, r25
 91a:	08 f4       	brcc	.+2      	; 0x91e <can_buffer_full+0x14>
 91c:	80 e0       	ldi	r24, 0x00	; 0
 91e:	08 95       	ret

00000920 <can_buffer_get_enqueue_ptr>:
 920:	cf 93       	push	r28
 922:	df 93       	push	r29
 924:	ec 01       	movw	r28, r24
 926:	0e 94 85 04 	call	0x90a	; 0x90a <can_buffer_full>
 92a:	81 11       	cpse	r24, r1
 92c:	0b c0       	rjmp	.+22     	; 0x944 <can_buffer_get_enqueue_ptr+0x24>
 92e:	2c 81       	ldd	r18, Y+4	; 0x04
 930:	88 81       	ld	r24, Y
 932:	99 81       	ldd	r25, Y+1	; 0x01
 934:	3e e0       	ldi	r19, 0x0E	; 14
 936:	23 9f       	mul	r18, r19
 938:	80 0d       	add	r24, r0
 93a:	91 1d       	adc	r25, r1
 93c:	11 24       	eor	r1, r1
 93e:	df 91       	pop	r29
 940:	cf 91       	pop	r28
 942:	08 95       	ret
 944:	80 e0       	ldi	r24, 0x00	; 0
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	fa cf       	rjmp	.-12     	; 0x93e <can_buffer_get_enqueue_ptr+0x1e>

0000094a <can_buffer_enqueue>:
 94a:	fc 01       	movw	r30, r24
 94c:	9f b7       	in	r25, 0x3f	; 63
    cli();
 94e:	f8 94       	cli
 950:	83 81       	ldd	r24, Z+3	; 0x03
 952:	8f 5f       	subi	r24, 0xFF	; 255
 954:	83 83       	std	Z+3, r24	; 0x03
 956:	84 81       	ldd	r24, Z+4	; 0x04
 958:	8f 5f       	subi	r24, 0xFF	; 255
 95a:	84 83       	std	Z+4, r24	; 0x04
 95c:	22 81       	ldd	r18, Z+2	; 0x02
 95e:	82 17       	cp	r24, r18
 960:	08 f0       	brcs	.+2      	; 0x964 <can_buffer_enqueue+0x1a>
 962:	14 82       	std	Z+4, r1	; 0x04
    SREG = *__s;
 964:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
 966:	08 95       	ret

00000968 <can_buffer_get_dequeue_ptr>:
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	ec 01       	movw	r28, r24
 96e:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <can_buffer_empty>
 972:	81 11       	cpse	r24, r1
 974:	0b c0       	rjmp	.+22     	; 0x98c <can_buffer_get_dequeue_ptr+0x24>
 976:	2d 81       	ldd	r18, Y+5	; 0x05
 978:	88 81       	ld	r24, Y
 97a:	99 81       	ldd	r25, Y+1	; 0x01
 97c:	3e e0       	ldi	r19, 0x0E	; 14
 97e:	23 9f       	mul	r18, r19
 980:	80 0d       	add	r24, r0
 982:	91 1d       	adc	r25, r1
 984:	11 24       	eor	r1, r1
 986:	df 91       	pop	r29
 988:	cf 91       	pop	r28
 98a:	08 95       	ret
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	fa cf       	rjmp	.-12     	; 0x986 <can_buffer_get_dequeue_ptr+0x1e>

00000992 <can_buffer_dequeue>:
 992:	fc 01       	movw	r30, r24
 994:	9f b7       	in	r25, 0x3f	; 63
    cli();
 996:	f8 94       	cli
 998:	83 81       	ldd	r24, Z+3	; 0x03
 99a:	81 50       	subi	r24, 0x01	; 1
 99c:	83 83       	std	Z+3, r24	; 0x03
 99e:	85 81       	ldd	r24, Z+5	; 0x05
 9a0:	8f 5f       	subi	r24, 0xFF	; 255
 9a2:	85 83       	std	Z+5, r24	; 0x05
 9a4:	22 81       	ldd	r18, Z+2	; 0x02
 9a6:	82 17       	cp	r24, r18
 9a8:	08 f0       	brcs	.+2      	; 0x9ac <can_buffer_dequeue+0x1a>
 9aa:	15 82       	std	Z+5, r1	; 0x05
    SREG = *__s;
 9ac:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
 9ae:	08 95       	ret

000009b0 <main>:
#include "can_wrapper.h"

uint8_t lastState = 0;
uint8_t state = 0;

int main(void) {
 9b0:	cf 93       	push	r28
 9b2:	df 93       	push	r29
 9b4:	cd b7       	in	r28, 0x3d	; 61
 9b6:	de b7       	in	r29, 0x3e	; 62
 9b8:	2e 97       	sbiw	r28, 0x0e	; 14
 9ba:	0f b6       	in	r0, 0x3f	; 63
 9bc:	f8 94       	cli
 9be:	de bf       	out	0x3e, r29	; 62
 9c0:	0f be       	out	0x3f, r0	; 63
 9c2:	cd bf       	out	0x3d, r28	; 61
    can_wrapper_init();
 9c4:	0e 94 6a 00 	call	0xd4	; 0xd4 <can_wrapper_init>

    DDRA = 0x00;
 9c8:	11 b8       	out	0x01, r1	; 1

    while (1) {
        state = (PINA & (1 << PD3)) >> PD3;
        if (state != lastState) {
            lastState = state;
            can_wrapper_send(0x08, 1, state);
 9ca:	11 e0       	ldi	r17, 0x01	; 1
 9cc:	08 e0       	ldi	r16, 0x08	; 8
        state = (PINA & (1 << PD3)) >> PD3;
 9ce:	80 b1       	in	r24, 0x00	; 0
 9d0:	83 fb       	bst	r24, 3
 9d2:	88 27       	eor	r24, r24
 9d4:	80 f9       	bld	r24, 0
 9d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
        if (state != lastState) {
 9da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <lastState>
 9de:	89 17       	cp	r24, r25
 9e0:	81 f0       	breq	.+32     	; 0xa02 <main+0x52>
            lastState = state;
 9e2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <lastState>
            can_wrapper_send(0x08, 1, state);
 9e6:	1f 92       	push	r1
 9e8:	8f 93       	push	r24
 9ea:	1f 93       	push	r17
 9ec:	1f 92       	push	r1
 9ee:	1f 92       	push	r1
 9f0:	1f 92       	push	r1
 9f2:	0f 93       	push	r16
 9f4:	0e 94 90 00 	call	0x120	; 0x120 <can_wrapper_send>
 9f8:	0f b6       	in	r0, 0x3f	; 63
 9fa:	f8 94       	cli
 9fc:	de bf       	out	0x3e, r29	; 62
 9fe:	0f be       	out	0x3f, r0	; 63
 a00:	cd bf       	out	0x3d, r28	; 61
        }

        // Check if a new messag was received
        if (can_check_message()) {
 a02:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_check_message>
 a06:	88 23       	and	r24, r24
 a08:	11 f3       	breq	.-60     	; 0x9ce <main+0x1e>
            can_t msg;

            // Try to read the message
            if (can_get_message(&msg)) {
 a0a:	ce 01       	movw	r24, r28
 a0c:	01 96       	adiw	r24, 0x01	; 1
 a0e:	0e 94 57 04 	call	0x8ae	; 0x8ae <can_get_message>
 a12:	88 23       	and	r24, r24
 a14:	e1 f2       	breq	.-72     	; 0x9ce <main+0x1e>
                msg.data[0]++;
 a16:	8f 81       	ldd	r24, Y+7	; 0x07
 a18:	8f 5f       	subi	r24, 0xFF	; 255
 a1a:	8f 83       	std	Y+7, r24	; 0x07
                can_send_message(&msg);
 a1c:	ce 01       	movw	r24, r28
 a1e:	01 96       	adiw	r24, 0x01	; 1
 a20:	0e 94 98 03 	call	0x730	; 0x730 <can_send_message>
 a24:	d4 cf       	rjmp	.-88     	; 0x9ce <main+0x1e>

00000a26 <_exit>:
 a26:	f8 94       	cli

00000a28 <__stop_program>:
 a28:	ff cf       	rjmp	.-2      	; 0xa28 <__stop_program>
